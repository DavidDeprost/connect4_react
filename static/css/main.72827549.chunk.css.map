{"version":3,"sources":["/home/david/Extra/web/javascript/react/connect4/src/app/app.scss","/home/david/Extra/web/javascript/react/connect4/src/app/_variables.scss","/home/david/Extra/web/javascript/react/connect4/src/app/status/status.scss","/home/david/Extra/web/javascript/react/connect4/src/app/settings/settings.scss","/home/david/Extra/web/javascript/react/connect4/src/app/game/checker.scss","/home/david/Extra/web/javascript/react/connect4/src/app/game/column.scss","/home/david/Extra/web/javascript/react/connect4/src/app/game/game.scss"],"names":[],"mappings":"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","file":"main.72827549.chunk.css","sourcesContent":["// This will copy all the variables from '_variables.scss' into this file:\n@import \"variables\";\n\n// LSD: Layout Space Debugger\n// Set to true for visual indicators of which elements are where,\n// along with their paddings and borders.\n$LSD: false;\n\n* {\n  margin: 0;\n  padding: 0;\n\n  @if $LSD {\n    outline: solid 1px red;\n  }\n}\n\nhtml, body {\n  min-height: 100vh;\n  max-width: 100vw;\n  background-color: $bodyFillColor;\n  // Ensure no scroll bars ever appear:\n  overflow: hidden;\n}\n\n#app {\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  /* In CSS Grid, the set of columns and rows are called tracks;\n  For the 2 columns we want a dynamic approach: we want both the 'settings'\n  and 'grid' section to grow (and shrink), but we want the 'grid' section\n  to be at most 1.5 times wider than the 'settings' section, and at least\n  90% of the length of the smallest viewport side (i.e. height when in\n  landscape, width when in portrait). This is exactly what the minmax()\n  function does; it provides a range through which the column width\n  can float freely, taking into account the given constraints.\n  NOTE:\n  In this case, our constraints aren't set in stone:\n  at certain sizes our minimum could become larger than our maximum;\n  in this case the maximum will simply be ignored until the minimum\n  is actually the smallest again!\n  fr, the grid-specific fraction unit, allows us to elegantly express\n  proportions in relation to each other. */\n  grid-template-rows: minmax(min-content, max-content) 1fr;\n  /* 'grid-template-rows' takes a sequence of sizes that define the individual rows.\n  In this case, we give the first row a minimum height of 10% of the viewport height,\n  but allow it to grow bigger if it is required to make the content fit.\n  The second row gets a height of 90% of the viewport height. */\n  grid-template-areas: 'settings status'\n                       'settings game';\n  /* 'grid-template-areas' takes a string of space-separated names, allowing us to give\n  each cell a name. If two adjacent cells have the same name, they are going to be\n  coalesced into the same area. To finish up, we need to register our chosen names\n  as 'grid-area's in their respective html elements (see below). */\n  // Set div to full screen or larger:\n  min-height: 100vh;\n}\n\n\n// LSD: Layout Space Debugger\n// Code for tagging most important elements\n.svg-tags {\n  display: none;\n}\n@if $LSD {\n  .svg-tags {\n    display: block;\n  }\n  #game,\n  #grid,\n  #app,\n  #buttons,\n  #status,\n  #settings {\n    position: relative;\n  }\n  // :after does not work on svgs!\n  // This means we can't use #svg-container:after\n  // or #svg-grid:after => svg-tags work-around.\n  #game:after,\n  #grid:after,\n  #app:after,\n  #buttons:after,\n  #settings:after {\n    position: absolute;\n    left: 0;\n    top: 0;\n    color: white;\n    background-color: red;\n    padding: 0.2rem;\n    font-size: 0.9rem;\n  }\n  #game:after {\n    content: '#game div';\n  }\n  #grid:after {\n    content: '#grid div';\n  }\n  #app:after {\n    content: '#app';\n  }\n  #buttons:after {\n    content: '#buttons';\n  }\n  #settings:after {\n    content: '#settings';\n  }\n  #status:after {\n    content: '#status';\n    position: absolute;\n    right: 0; // overlaps with #app tag when on the left\n    top: 0;\n    color: white;\n    background-color: red;\n    padding: 0.2rem;\n    font-size: 0.9rem;\n  }\n}","$sidebarFillColor: #250d0d;\n$sidebarFontColor: #7d4444;\n$sidebarHoverColor: #f1f1f1;\n\n$bodyFillColor: #faf1d7;\n$statusFillColor: rgb(0, 34, 46);//rgb(48, 42, 42);//#ffd381;\n$statusBorderColor: #830602;\n\n$sidebarLandscapeWidth: 40vw;\n$sidebarPortraitWidth: 80vw;\n\n$transitionDuration: 0.4s;\n\n$mediaQueryWidth: 1200px;\n:export {\n  mediaQueryWidth: 1200;\n}\n","// This will copy all the variables from '_variables.scss' into this file:\n@import \"../variables\";\n\n.status {\n  grid-area: status;\n  background-color: $statusFillColor;\n  border-bottom: 2px solid $statusBorderColor;\n  font-size: 1.5rem;\n  font-weight: bold;\n  height: 3.6rem;\n  padding: 0.5rem 1rem 0rem 4.5rem;\n  overflow: hidden;\n  white-space: nowrap;\n  text-align: center;\n  display: flex;\n  flex-direction: row;\n\n}\n\n.status.yellow {\n  background-color: rgb(251, 255, 0);\n}\n\n.status.orange {\n  background-color: rgb(226, 85, 3);\n}\n\n.status.red {\n  background-color: red;\n}\n\n.status.green {\n  background-color: rgb(31, 134, 5);\n}\n\n.status.cyan {\n  background-color: rgb(6, 90, 199);\n}\n\n.status.blue {\n  background-color: blue;\n}\n\n.status.purple {\n  background-color: rgb(155, 3, 226);\n}\n\n#timerDisplay {\n  display: inline-block;\n  text-align: left;\n  margin-top: 1rem;\n}\n\n#winnerMessage {\n  // Use the empty #winnerMessage as filler, to push #timerDisplay\n  // and #statusMessage to the left and right respectively:\n  flex-grow: 5;\n  text-align: center;\n  margin-top: 1rem;\n}\n\n#statusMessage {\n  display: inline-block;\n  text-align: right;\n  margin-top: 1rem;\n}\n\n#statusMessage.yellow,\n#timerDisplay.yellow {\n  color: rgb(192, 192, 2);\n}\n\n#statusMessage.orange,\n#timerDisplay.orange {\n  color: rgb(226, 85, 3);\n}\n\n#statusMessage.red,\n#timerDisplay.red {\n  color: red;\n}\n\n#statusMessage.green,\n#timerDisplay.green {\n  color: rgb(31, 134, 5);\n}\n\n#statusMessage.cyan,\n#timerDisplay.cyan {\n  color: rgb(6, 90, 199);\n}\n\n#statusMessage.blue,\n#timerDisplay.blue {\n  color: blue;\n}\n\n#statusMessage.purple,\n#timerDisplay.purple {\n  color: rgb(155, 3, 226);\n}\n\n","// This will copy all the variables from '_variables.scss' into this file:\n@import \"../variables\";\n\n\n// Styles of the settings sidebar itself:\n.sidebar {\n  grid-area: settings;\n  height: 100%;\n  background-color: $sidebarFillColor;\n  border-right: 2px solid $sidebarFontColor;\n  \n  @media (orientation: landscape), (min-width: $mediaQueryWidth) {\n    width: $sidebarLandscapeWidth;\n    transition: width $transitionDuration;\n    &.landscapePassive {\n      cursor: pointer;\n      width: 0.5rem;\n      &:hover {\n        .sidebar-trigger {\n          color: $sidebarHoverColor;\n        }\n      }\n    }\n  }\n  \n  @media (orientation: portrait), (max-width: $mediaQueryWidth) {\n    width: 0.5rem;\n\n    cursor: pointer;\n\n    &:not(.portraitActive) {\n      &:hover > .sidebar-trigger {\n          color: $sidebarHoverColor;\n        \n      }\n    }\n  }\n\n  @media (hover: none) {\n    // Prevent blue focus on touch devices when tapping 'sidebar-content':\n    cursor: auto;\n  }\n\n  .sidebar-trigger {\n    z-index: 10;\n    position: fixed;\n    top: 0;\n    height: 4.1rem;\n    padding: 0.5rem 1rem 0.8rem 1rem;\n    margin: 0;\n    color: $sidebarFontColor;\n    background-color: $sidebarFillColor;\n    font-size: 2.5rem;\n    \n    cursor: pointer;\n    outline: none;\n    text-decoration: none;\n    border: none;\n    border-right: 2px solid $sidebarFontColor;\n\n    &:hover {\n      color: $sidebarHoverColor;\n    }\n    @media (hover: none) {\n      // Prevent color change on touch devices:\n      &:hover {\n        color: $sidebarFontColor;\n      }\n    }\n  }\n\n  @media (orientation: portrait), (max-width: $mediaQueryWidth) {\n    .sidebar-background {\n      position: fixed;\n      top: 0;\n      width: 100vw;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.5);\n      visibility: hidden;\n      z-index: 5;\n      &.portraitActive {\n        visibility: visible;\n      }\n    }\n  }\n\n  .sidebar-content {\n    height: 100vh;\n    width: inherit;\n    z-index: 5;\n    background-color: $sidebarFillColor;\n    overflow: hidden;\n    position: fixed;\n    top: 0;\n    cursor: auto;\n\n    @media (orientation: landscape), (min-width: $mediaQueryWidth) {\n      width: $sidebarLandscapeWidth;\n      left: 0;\n      &.landscapePassive {\n        left: -90vw;\n      }\n      transition: left $transitionDuration;\n    }\n\n    @media (orientation: portrait), (max-width: $mediaQueryWidth) {\n      width: $sidebarPortraitWidth;\n\n      left: -90vw;\n      &.portraitActive {\n        left: 0;\n      }\n      transition: left $transitionDuration;\n    }\n  \n    .sidebar-name {\n      height: 2.6rem;\n      padding: 0.8rem 0.5rem 0.7rem 4.5rem;\n      margin: 0;\n      color: $sidebarFontColor;\n      font-size: 2rem;\n      text-align: center;\n\n    }\n\n    .line {\n      padding: 0;\n      margin: 0;\n      border-color: $sidebarFontColor;\n      @supports (-moz-appearance: meterbar) {\n        // Firefox Specific:\n        border-style: solid;\n      }\n\n    }\n\n    .padding {\n      padding: 8rem 1rem 1rem 1rem;\n    }\n  }\n}\n\n\n// Styles of settings subcomponents:\n.fontColor {\n  color: $sidebarFontColor;\n}\n",".winningChecker {\n  fill-opacity: 1;\n}\n\n",".colInFocus rect:hover {\n  cursor: pointer;\n  fill-opacity: 0.8;\n}\n","#game {\n  grid-area: game;\n  display: flex;\n  flex-direction: column;\n}\n\n\n#grid {\n  /* To fix an svg rendering inconsistency between Firefox and Chrome,\n  one workaround is to set the parent position to relative (i.e. '#grid')\n  and the svg's one to absolute. It's like one User Agent (FF) does create\n  a new stack for the svg node, while the other (chrome) doesn't. */\n  position: relative;\n  flex: 1 1 auto;\n  min-height: 200px;\n  margin: 1rem;\n\n  #svg-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  #svg-grid.gridNoFocus {\n    fill-opacity: 0.4;\n  }\n  \n  svg g.gridNoFocus {\n    fill-opacity: 0.45;\n  }\n}\n\n\n\n// Google Chrome on Android has a bug that treats the viewport height (100vh)\n// as the viewport height + height of the address bar.\n// Firefox does the things correctly, so we fix it for chrome by adding more bottom margin:\n@media (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 200dpi) and (orientation: portrait) {\n  #buttons {\n    margin-bottom: 5rem;\n    @supports (-moz-appearance: meterbar) {\n      // Firefox Specific:\n      margin-bottom: 1rem;\n    }\n  }\n}\n\n#buttons {\n  text-align: center;\n\n  button {\n    cursor: pointer;\n    margin-left: 4rem;\n    margin-right: 4rem;\n    margin-bottom: 1rem;\n  }\n}\n\n\n"]}